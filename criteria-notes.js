[{"content":"## Welcome to RTLBook\n\nThis is an interactive coding environment where you can explore the following libraries:\n\n| Name      | Docs |\n| ----------- | ----------- |\n| React      | [docs](https://reactjs.org/)       |\n| @testing-library/react   |  [docs](https://testing-library.com/docs/react-testing-library/intro/)        |\n| @testing-library/user-event |   [docs](https://testing-library.com/docs/user-event/intro)  |\n| @testing-library/react-hooks |  [docs](https://github.com/testing-library/react-hooks-testing-library)  |\n| @testing-library/jest-dom | [docs](https://github.com/testing-library/jest-dom#custom-matchers) |\n| expect |  [docs](https://jestjs.io/docs/expect)  |\n\nIn between each 'cell' there are buttons that can add in a new code editor or a text section.","type":"text","id":"12frm"},{"content":"import React, { useState } from 'react';\nimport { render, screen } from '@testing-library/react';\nimport user from '@testing-library/user-event';\n\nconst Counter = () => {\n  const [count, setCount] = useState(0);\n  return <button onClick={() => setCount((c) => c + 1)}>\n    Count: {count}\n  </button>\n};\nrender(<Counter />);","type":"code","id":"az9bh"},{"content":"test('it shows a button', () => {\n  render(<Counter />);\n\n  const button = screen.getByRole('button');\n\n  expect(\n    button\n  ).toBeInTheDocument();\n});\n","type":"code","id":"ngyzj"},{"content":"test('it doesnt show an input', () => {\n  render(<Counter />);\n\n  const input = screen.queryByRole('textbox');\n  \n  expect(\n    input\n  ).not.toBeInTheDocument();\n});\n","type":"code","id":"hgs1s"},{"content":"function DataForm() {\r\n  const [email, setEmail] = useState('lala@hotmail.com');\r\n\r\n  return (\r\n    <form>\r\n      <h3>Enter Data</h3>\r\n\r\n      <div data-testid=\"image wrapper\">\r\n        <img alt=\"data\" src=\"data.jpg\" />\r\n      </div>\r\n\r\n      <label htmlFor=\"email\">Email</label>\r\n      <input \r\n        id=\"email\"\r\n        value={email}\r\n        onChange={e => setEmail(e.target.value)}\r\n      />\r\n\r\n      <label htmlFor=\"color\">Color</label>\r\n      <input \r\n        id=\"color\"\r\n        placeholder=\"Red\"\r\n      />\r\n\r\n      <button title=\"Click when ready to submit\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nrender(<DataForm />);","type":"code","id":"qbtrl"},{"content":"test('selecting different elements', () => {\r\n  render(<DataForm />);\r\n\r\n  const elements = [\r\n    screen.getByRole('button'),\r\n    screen.getByText(/enter/i),\r\n\r\n    screen.getByLabelText(/email/i),\r\n    screen.getByPlaceholderText('Red'),\r\n    screen.getByDisplayValue('lala@hotmail.com'),\r\n    screen.getByAltText('data'),\r\n    screen.getByTitle(/ready to submit/i),\r\n\r\n    screen.getByTestId('image wrapper')\r\n  ];\r\n\r\n  for (let element of elements) {\r\n    expect(element).toBeInTheDocument();\r\n  }\r\n\r\n});","type":"code","id":"xk9n1"}]