[{"content":"import { render, screen } from '@testing-library/react';\r\n\r\nfunction RoleExample() {\r\n  return (\r\n    <div>\r\n      <a href=\"/\">Link</a>\r\n        <button>Button</button>\r\n        <footer>Contentinfo</footer>\r\n        <h1>Heading</h1>\r\n        <header>Banner</header>\r\n        <img alt=\"description\" /> Img\r\n        <input type=\"checkbox\" /> Checkbox\r\n        <input type=\"number\" /> Spinbutton\r\n        <input type=\"radio\" /> Radio\r\n        <input type=\"text\" /> Textbox\r\n        <li>Listitem</li>\r\n        <ul>Listgroup</ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<RoleExample />)","type":"code","id":"3i1fc"},{"content":"test('can find elements by role', () => {\r\n  render(<RoleExample />)\r\n\r\n  const roles = [\r\n    'link',\r\n    'button',\r\n    'contentinfo',\r\n    'heading',\r\n    'banner',\r\n    'img',\r\n    'checkbox',\r\n    'spinbutton',\r\n    'radio',\r\n    'textbox',\r\n    'listitem',\r\n    'list'\r\n  ];\r\n\r\n  for (let role of roles) {\r\n    const el = screen.getByRole(role);\r\n\r\n    expect(el).toBeInTheDocument();\r\n  }\r\n});","type":"code","id":"a0mpw"},{"content":"function AccessibleName() {\r\n  return (\r\n    <div>\r\n      <button>Submit</button>\r\n      <button>Cancel</button>\r\n    </div>\r\n  );\r\n}\r\nrender(<AccessibleName />);","type":"code","id":"vcruv"},{"content":"test('can select by accessible name', () => {\r\n  render(<AccessibleName />);\r\n\r\n  const submitButton = screen.getByRole('button', {\r\n    name: /submit/i\r\n  });\r\n\r\n  const cancelButton = screen.getByRole('button', {\r\n    name: /cancel/i\r\n  });\r\n\r\n  expect(submitButton).toBeInTheDocument();\r\n  expect(cancelButton).toBeInTheDocument();\r\n});","type":"code","id":"jga7o"},{"content":"function MoreNames() {\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"email\">Email</label>\r\n      <input id=\"email\"/>\r\n\r\n      <label htmlFor=\"search\">Search</label>\r\n      <input id=\"search\"/>\r\n    </div>\r\n  );\r\n}\r\n\r\nrender(<MoreNames />)","type":"code","id":"1illo"},{"content":"test('shows an email and search input', () => {\r\n  render(<MoreNames />);\r\n\r\n  const emailInput = screen.getByRole('textbox', {\r\n    name: /email/i\r\n  });\r\n\r\n  const  searchInput = screen.getByRole('textbox', {\r\n    name: /search/i\r\n  });\r\n\r\n  expect(emailInput).toBeInTheDocument();\r\n  expect(searchInput).toBeInTheDocument();\r\n});","type":"code","id":"lggv5"},{"content":"function IconButtons() {\r\n  return (\r\n    <div>\r\n      <button aria-label=\"sign in\">\r\n        <svg />\r\n      </button>\r\n      \r\n      <button aria-label=\"sign out\">\r\n        <svg />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nrender(<IconButtons />);","type":"code","id":"qjoh6"},{"content":"test('find elements based on label', () => {\r\n  render(<IconButtons />);\r\n\r\n  const signInButton = screen.getByRole('button', {\r\n    name: /sign in/i\r\n  });\r\n\r\n  const signOutButton = screen.getByRole('button', {\r\n    name: /sign out/i\r\n  });\r\n\r\n  expect(signInButton).toBeInTheDocument();\r\n  expect(signOutButton).toBeInTheDocument();\r\n  \r\n});","type":"code","id":"8mx0a"}]